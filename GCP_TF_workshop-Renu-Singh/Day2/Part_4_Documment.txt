
Difference Between Primitive, Predefined, and Custom Roles

While working with IAM in GCP, I learned that there are three types of roles: primitive, predefined, and custom. Here's how they are different:
1. Primitive Roles

These are the most basic and broad roles. There are only three of them:

    Viewer: Can only view resources

    Editor: Can view and modify resources

    Owner: Has full control, including managing permissions

They are easy to use but too general for most real-world setups, especially in production.
2. Predefined Roles

These roles are more specific and are created by Google. They are meant for particular services or tasks.

For example:

    Compute Viewer: Can view Compute Engine resources

    Storage Object Admin: Full control over Cloud Storage objects

These are better than primitive roles because they offer more control over what a user or service account can do.
3. Custom Roles

Custom roles are roles that we create ourselves. We can pick exactly which permissions to include based on the task.

In this exercise, I created a custom role called ComputeInstanceViewer with only four permissions: list, get, start, and stop Compute Engine instances. This was useful to make sure the user had only what they needed â€” nothing extra.
Summary
Role Type	Who Defines It	Level of Control	Best Used For
Primitive	Google	Very broad	Simple setups, not recommended for production
Predefined	Google	Task-specific	Common use cases like storage, compute, logging
Custom	You	Very specific	Fine-grained access control for special needs
Using custom and predefined roles instead of primitive roles helps improve security and keeps access tightly managed.
